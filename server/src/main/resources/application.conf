akka {
  actor {
    provider = "cluster"
    # already exists
    serializers {
      proto = "akka.remote.serialization.ProtobufSerializer"
    }
    # only this
    serialization-bindings {
      "com.trueaccord.scalapb.GeneratedMessage" = proto
    }
  }
  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      port = 2551
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://NaggerCluster@127.0.0.1:2551"]

    # auto downing is NOT safe for production deployments.
    # you may want to use it during development, read more about it in the docs.
    #
    # auto-down-unreachable-after = 100s
    min-nr-of-members = 1
  }

  # needs for starting connection to casandra , t.k. actors creation is lazy
  extensions = ["akka.persistence.Persistence"]
  persistence {
    journal {
      plugin = "cassandra-journal"
      auto-start-journals = ["cassandra-journal"]
    }
    snapshot-store {
      plugin = "cassandra-snapshot-store"
      auto-start-snapshot-stores = ["cassandra-snapshot-store"]
    }
    query.my-read-journal = "cassandra-query-journal"
    
  }

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

}

cassandra-journal {
  contact-points = [ "127.0.0.1:9042"]
  keyspace = "nagger"
}
cassandra-snapshot-store {
  contact-points = [ "127.0.0.1:9042"]
  keyspace = "nagger"
}

akka.extensions += "akka.cluster.ddata.DistributedData"
akka.cluster.sharding {
 # remember-entities = on
  remember-entities = on
  state-store-mode = ddata
  distributed-data.delta-crdt.enabled = off

}
